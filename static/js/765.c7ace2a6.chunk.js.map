{"version":3,"file":"static/js/765.c7ace2a6.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/EditForm/EditForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ChildModal/ChildModal.module.css?655d","components/ChildModal/ChildModal.jsx","webpack://goit-react-hw-08-phonebook/./src/components/CheckboxListSecondary/CheckboxListSecondary.module.css?001d","components/CheckboxListSecondary/CheckboxListSecondary.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/Contacts.module.css?fb9d","components/ModalBox/ModalBox.jsx","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Pagination/Pagination.module.css?4da5","components/Pagination/Pagination.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import css from '../Container/Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={css.container}>{children}</div>;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\"};","import css from '../ContactForm/ContactForm.module.css';\nimport Fab from '@mui/material/Fab';\nimport { MdOutlinePersonAddAlt } from 'react-icons/md';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { editContacts, getContacts } from 'redux/operations';\nimport { useEffect } from 'react';\n\nexport default function EditForm({ click, contact }) {\n  const isUpdate = useSelector(state => state.contacts.upDate);\n\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    const editContact = {\n      id: contact.id,\n      cont: {\n        name,\n        number,\n      },\n    };\n\n    dispatch(editContacts(editContact));\n\n    formReset();\n    click();\n  };\n\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  useEffect(() => {\n    isUpdate && dispatch(getContacts());\n  }, [isUpdate, dispatch]);\n\n  return (\n    <>\n      <form className={css.form} onSubmit={handleFormSubmit}>\n        <label className={css.label}>\n          Name\n          <input\n            className={css.input}\n            placeholder=\"Jacob Mercer\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleInputChange}\n          />\n        </label>\n\n        <label className={css.label}>\n          Number\n          <input\n            className={css.input}\n            placeholder=\"+380507408745\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleInputChange}\n          />\n        </label>\n\n        <Fab type=\"submit\" color=\"primary\" aria-label=\"add\">\n          <MdOutlinePersonAddAlt />\n        </Fab>\n      </form>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wraper\":\"ChildModal_wraper__KTUUY\",\"icon\":\"ChildModal_icon__C2j0M\",\"text\":\"ChildModal_text__qc7Wg\",\"btn_icon\":\"ChildModal_btn_icon__evhY0\"};","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Button from '@mui/material/Button';\n\nimport EditForm from 'components/EditForm/EditForm';\nimport Avatar from '@mui/material/Avatar';\nimport css from '../ChildModal/ChildModal.module.css';\nimport { FcDataConfiguration } from 'react-icons/fc';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  pt: 2,\n  px: 4,\n  pb: 3,\n};\n\nfunction ChildModal({ contact }) {\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Button onClick={handleOpen}>Edit contact</Button>\n      <Modal\n        hideBackdrop\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"child-modal-title\"\n        aria-describedby=\"child-modal-description\"\n      >\n        <Box sx={{ ...style, width: 200 }}>\n          <EditForm contact={contact} click={handleClose} />\n\n          <Button onClick={handleClose}>Cancel</Button>\n        </Box>\n      </Modal>\n    </React.Fragment>\n  );\n}\n\nexport default function NestedModal({ contactItem }) {\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <FcDataConfiguration className={css.btn_icon} onClick={handleOpen} />\n\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"parent-modal-title\"\n        aria-describedby=\"parent-modal-description\"\n      >\n        <Box sx={{ ...style, width: 400 }}>\n          <div className={css.wraper}>\n            <Avatar className={css.icon} />\n            <h3 id=\"parent-modal-title\">User name:</h3>\n            <p className={css.text} id=\"parent-modal-description\">\n              {contactItem.name}\n            </p>\n            <h3 id=\"parent-modal-title\">User number:</h3>\n            <p className={css.text} id=\"parent-modal-description\">\n              {contactItem.number}\n            </p>\n          </div>\n          <ChildModal contact={contactItem} />\n        </Box>\n      </Modal>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"CheckboxListSecondary_list__gbP3L\",\"contacts_list\":\"CheckboxListSecondary_contacts_list__K8nde\",\"contacts_text\":\"CheckboxListSecondary_contacts_text__gJFHc\"};","import * as React from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeContacts } from 'redux/operations';\nimport Button from '@mui/material/Button';\nimport ChildModal from '../ChildModal/ChildModal';\nimport css from '../CheckboxListSecondary/CheckboxListSecondary.module.css';\n\nexport default function CheckboxListSecondary({ arr, page }) {\n  // const contacts = useSelector(state => state.contacts.contacts);\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.contacts.filter);\n\n  const getVisibleContacts = () => {\n    return arr[page].filter(contacts =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <div className={css.list}>\n      <List\n        className={css.contacts_list}\n        dense\n        sx={{\n          width: '100%',\n          maxWidth: '900px',\n          bgcolor: 'background.paper',\n          fontSize: '30px',\n        }}\n      >\n        {visibleContacts.map(contact => {\n          return (\n            <ListItem key={contact.id}>\n              <ListItemButton>\n                <ListItemAvatar>\n                  <Avatar />\n                </ListItemAvatar>\n                <ListItemText className={css.contacts_text}>\n                  {contact.name}\n                </ListItemText>\n                <ChildModal contactItem={contact} />\n                <Button\n                  onClick={() => dispatch(removeContacts(contact.id))}\n                  variant=\"outlined\"\n                  color=\"error\"\n                >\n                  DELETE\n                </Button>\n              </ListItemButton>\n            </ListItem>\n          );\n        })}\n      </List>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Contacts_section__JEEdl\",\"wraper\":\"Contacts_wraper__sp+0W\",\"icon\":\"Contacts_icon__NU3jc\",\"btn\":\"Contacts_btn__RQTAr\",\"content\":\"Contacts_content__WfCAN\"};","import Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\n\nexport default function ModalBox({ openModal, closeModal, children }) {\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n  };\n\n  return (\n    <Modal open={openModal} onClose={closeModal}>\n      <Box sx={style}>{children}</Box>\n    </Modal>\n  );\n}\n","import css from '../ContactForm/ContactForm.module.css';\nimport Fab from '@mui/material/Fab';\nimport { MdOutlinePersonAddAlt } from 'react-icons/md';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts, getContacts } from 'redux/operations';\nimport { useEffect } from 'react';\n\nexport default function ContactForm({ closeModal }) {\n  const contacts = useSelector(state => state.contacts.contacts);\n\n  const isUpdate = useSelector(state => state.contacts.upDate);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const addName = contacts.map(el => el.name).includes(name);\n    if (addName) {\n      alert(`${event.name} is already in contacts`);\n    } else {\n      const contact = {\n        name,\n        number,\n      };\n\n      dispatch(addContacts(contact));\n    }\n    formReset();\n    closeModal();\n  };\n\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  useEffect(() => {\n    isUpdate && dispatch(getContacts());\n  }, [isUpdate, dispatch]);\n\n  return (\n    <>\n      <form className={css.form} onSubmit={handleFormSubmit}>\n        <label className={css.label}>\n          Name\n          <input\n            className={css.input}\n            placeholder=\"Jacob Mercer\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleInputChange}\n          />\n        </label>\n\n        <label className={css.label}>\n          Number\n          <input\n            className={css.input}\n            placeholder=\"+380507408745\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleInputChange}\n          />\n        </label>\n\n        <Fab type=\"submit\" color=\"primary\" aria-label=\"add\">\n          <MdOutlinePersonAddAlt />\n        </Fab>\n      </form>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wriper\":\"Pagination_wriper__49ogG\"};","import * as React from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\nimport css from '../Pagination/Pagination.module.css';\n\nexport default function BasicPagination({ pages, handelPagination }) {\n  const handelChange = (e, p) => {\n    handelPagination(p - 1);\n  };\n\n  return (\n    <Stack spacing={2} className={css.wriper}>\n      <Pagination\n        className={css.wriper}\n        count={pages}\n        color=\"primary\"\n        onChange={handelChange}\n      />\n    </Stack>\n  );\n}\n","import { filter } from '../../redux/contactsSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TextField from '@mui/material/TextField';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(state => state.contacts.filter);\n\n  const changeFilter = event => {\n    dispatch(filter(event.target.value));\n  };\n\n  return (\n    <>\n      <TextField\n        label=\"Search contact\"\n        id=\"outlined-size-normal\"\n        type=\"text\"\n        name=\"name\"\n        value={filterValue}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        onChange={changeFilter}\n      />\n    </>\n  );\n}\n","import CheckboxListSecondary from 'components/CheckboxListSecondary/CheckboxListSecondary';\nimport Container from 'components/Container/Container';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/operations';\nimport css from '../Contacts/Contacts.module.css';\nimport Fab from '@mui/material/Fab';\nimport { MdOutlinePersonAddAlt } from 'react-icons/md';\nimport ModalBox from 'components/ModalBox/ModalBox';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Pagination from 'components/Pagination/Pagination';\nimport Filter from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const contacts = useSelector(state => state.contacts.contacts);\n  const isUpdate = useSelector(state => state.contacts.upDate);\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const [page, setPage] = useState(0);\n  // const [totalPage, setTotalPage] = useState([]);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  ///////////////////////////\n  const totalPage = [];\n\n  const arraySplitter = (arr, qtyItems) => {\n    let countItems = 0;\n    const lengthArr = arr.length;\n    const splitter = arr => {\n      if (countItems >= lengthArr) {\n        return;\n      }\n      totalPage.push(arr.slice(countItems, countItems + qtyItems));\n      countItems = countItems + qtyItems;\n      splitter(arr);\n    };\n    splitter(arr);\n    return totalPage;\n  };\n\n  arraySplitter(contacts, 3);\n\n  const handelPagination = e => {\n    console.log(e);\n    setPage(e);\n  };\n\n  ////////////////////////////\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n  useEffect(() => {\n    isUpdate && dispatch(getContacts());\n  }, [isUpdate, dispatch]);\n\n  return (\n    <>\n      <Container>\n        <section className={css.section}>\n          <div className={css.wraper}>\n            <Fab\n              className={css.btn}\n              onClick={handleOpen}\n              color=\"primary\"\n              aria-label=\"add\"\n              size=\"large\"\n              fontSize=\"40\"\n            >\n              <MdOutlinePersonAddAlt className={css.icon} />\n            </Fab>\n            <Filter />\n          </div>\n          <ModalBox openModal={open} closeModal={handleClose}>\n            <ContactForm closeModal={handleClose} />\n          </ModalBox>\n          {contacts.length !== 0 ? (\n            <CheckboxListSecondary arr={totalPage} page={page} />\n          ) : (\n            <div className={css.content}>\n              You don't have contacts yet! Please add a new contact.\n            </div>\n          )}\n          <Pagination\n            pages={totalPage.length}\n            handelPagination={handelPagination}\n          />\n        </section>\n      </Container>\n    </>\n  );\n}\n"],"names":["Container","children","className","css","EditForm","click","contact","isUpdate","useSelector","state","contacts","upDate","dispatch","useDispatch","useState","name","setName","number","setNumber","handleInputChange","event","target","value","formReset","useEffect","getContacts","onSubmit","preventDefault","editContact","id","cont","editContacts","placeholder","type","pattern","title","required","onChange","Fab","color","style","position","top","left","transform","width","bgcolor","border","boxShadow","pt","px","pb","ChildModal","React","open","setOpen","handleClose","Button","onClick","Modal","hideBackdrop","onClose","Box","sx","NestedModal","contactItem","Avatar","CheckboxListSecondary","arr","page","filter","visibleContacts","toLowerCase","includes","List","dense","maxWidth","fontSize","map","ListItem","ListItemButton","ListItemAvatar","ListItemText","removeContacts","variant","ModalBox","openModal","closeModal","p","ContactForm","el","alert","addContacts","BasicPagination","pages","handelPagination","Stack","spacing","Pagination","count","e","Filter","filterValue","TextField","label","Contacts","setPage","totalPage","qtyItems","countItems","lengthArr","length","splitter","push","slice","arraySplitter","size","console","log"],"sourceRoot":""}